// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="rocc0_vadd,hls_ip_2018_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcvu9p-flgb2104-2-i,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.750000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=1975,HLS_SYN_LUT=2107,HLS_VERSION=2018_2}" *)

module rocc0_vadd (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        length_a_req_din,
        length_a_req_full_n,
        length_a_req_write,
        length_a_rsp_empty_n,
        length_a_rsp_read,
        length_a_address,
        length_a_datain,
        length_a_dataout,
        length_a_size,
        b_c_req_din,
        b_c_req_full_n,
        b_c_req_write,
        b_c_rsp_empty_n,
        b_c_rsp_read,
        b_c_address,
        b_c_datain,
        b_c_dataout,
        b_c_size,
        ap_return
);

parameter    ap_ST_fsm_state1 = 51'd1;
parameter    ap_ST_fsm_state2 = 51'd2;
parameter    ap_ST_fsm_state3 = 51'd4;
parameter    ap_ST_fsm_state4 = 51'd8;
parameter    ap_ST_fsm_state5 = 51'd16;
parameter    ap_ST_fsm_state6 = 51'd32;
parameter    ap_ST_fsm_state7 = 51'd64;
parameter    ap_ST_fsm_state8 = 51'd128;
parameter    ap_ST_fsm_state9 = 51'd256;
parameter    ap_ST_fsm_state10 = 51'd512;
parameter    ap_ST_fsm_state11 = 51'd1024;
parameter    ap_ST_fsm_state12 = 51'd2048;
parameter    ap_ST_fsm_state13 = 51'd4096;
parameter    ap_ST_fsm_state14 = 51'd8192;
parameter    ap_ST_fsm_state15 = 51'd16384;
parameter    ap_ST_fsm_state16 = 51'd32768;
parameter    ap_ST_fsm_state17 = 51'd65536;
parameter    ap_ST_fsm_state18 = 51'd131072;
parameter    ap_ST_fsm_state19 = 51'd262144;
parameter    ap_ST_fsm_state20 = 51'd524288;
parameter    ap_ST_fsm_state21 = 51'd1048576;
parameter    ap_ST_fsm_state22 = 51'd2097152;
parameter    ap_ST_fsm_state23 = 51'd4194304;
parameter    ap_ST_fsm_state24 = 51'd8388608;
parameter    ap_ST_fsm_state25 = 51'd16777216;
parameter    ap_ST_fsm_state26 = 51'd33554432;
parameter    ap_ST_fsm_state27 = 51'd67108864;
parameter    ap_ST_fsm_state28 = 51'd134217728;
parameter    ap_ST_fsm_state29 = 51'd268435456;
parameter    ap_ST_fsm_state30 = 51'd536870912;
parameter    ap_ST_fsm_state31 = 51'd1073741824;
parameter    ap_ST_fsm_state32 = 51'd2147483648;
parameter    ap_ST_fsm_state33 = 51'd4294967296;
parameter    ap_ST_fsm_state34 = 51'd8589934592;
parameter    ap_ST_fsm_state35 = 51'd17179869184;
parameter    ap_ST_fsm_state36 = 51'd34359738368;
parameter    ap_ST_fsm_state37 = 51'd68719476736;
parameter    ap_ST_fsm_state38 = 51'd137438953472;
parameter    ap_ST_fsm_state39 = 51'd274877906944;
parameter    ap_ST_fsm_state40 = 51'd549755813888;
parameter    ap_ST_fsm_state41 = 51'd1099511627776;
parameter    ap_ST_fsm_state42 = 51'd2199023255552;
parameter    ap_ST_fsm_state43 = 51'd4398046511104;
parameter    ap_ST_fsm_state44 = 51'd8796093022208;
parameter    ap_ST_fsm_state45 = 51'd17592186044416;
parameter    ap_ST_fsm_state46 = 51'd35184372088832;
parameter    ap_ST_fsm_state47 = 51'd70368744177664;
parameter    ap_ST_fsm_state48 = 51'd140737488355328;
parameter    ap_ST_fsm_state49 = 51'd281474976710656;
parameter    ap_ST_fsm_state50 = 51'd562949953421312;
parameter    ap_ST_fsm_state51 = 51'd1125899906842624;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output   length_a_req_din;
input   length_a_req_full_n;
output   length_a_req_write;
input   length_a_rsp_empty_n;
output   length_a_rsp_read;
output  [31:0] length_a_address;
input  [31:0] length_a_datain;
output  [31:0] length_a_dataout;
output  [31:0] length_a_size;
output   b_c_req_din;
input   b_c_req_full_n;
output   b_c_req_write;
input   b_c_rsp_empty_n;
output   b_c_rsp_read;
output  [31:0] b_c_address;
input  [31:0] b_c_datain;
output  [31:0] b_c_dataout;
output  [31:0] b_c_size;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg length_a_req_write;
reg length_a_rsp_read;
reg[31:0] length_a_address;
reg b_c_req_din;
reg b_c_req_write;
reg b_c_rsp_read;
reg[31:0] b_c_address;
reg[31:0] b_c_dataout;

(* fsm_encoding = "none" *) reg   [50:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] length_reg_955;
wire    ap_CS_fsm_state3;
reg   [28:0] tmp_44_reg_970;
wire   [31:0] i_5_fu_396_p3;
reg   [31:0] i_5_reg_975;
wire    ap_CS_fsm_state4;
wire   [31:0] tmp_49_fu_472_p3;
reg   [31:0] tmp_49_reg_980;
wire  signed [31:0] tmp_1_fu_485_p2;
reg  signed [31:0] tmp_1_reg_988;
wire    ap_CS_fsm_state5;
wire   [0:0] tmp_50_fu_480_p2;
reg   [63:0] length_a_addr_reg_994;
wire    ap_CS_fsm_state6;
reg   [31:0] length_a_addr_read_reg_1006;
wire    ap_CS_fsm_state8;
reg    ap_block_state8;
reg   [31:0] b_c_addr_read_reg_1011;
wire   [31:0] tmp_3_fu_521_p2;
reg   [31:0] tmp_3_reg_1016;
wire    ap_CS_fsm_state9;
wire   [31:0] tmp_5_fu_525_p2;
reg   [31:0] tmp_5_reg_1021;
wire    ap_CS_fsm_state11;
reg   [31:0] length_a_addr_1_read_reg_1038;
wire    ap_CS_fsm_state13;
reg    ap_block_state13;
reg   [31:0] b_c_addr_2_read_reg_1043;
wire   [31:0] tmp_8_fu_563_p2;
reg   [31:0] tmp_8_reg_1048;
wire    ap_CS_fsm_state14;
wire   [31:0] tmp_9_fu_567_p2;
reg   [31:0] tmp_9_reg_1053;
wire  signed [31:0] tmp_4_fu_582_p2;
reg  signed [31:0] tmp_4_reg_1058;
wire    ap_CS_fsm_state16;
reg   [31:0] length_a_addr_2_read_reg_1075;
wire    ap_CS_fsm_state18;
reg    ap_block_state18;
reg   [31:0] b_c_addr_4_read_reg_1080;
wire   [31:0] tmp_11_fu_612_p2;
reg   [31:0] tmp_11_reg_1085;
wire    ap_CS_fsm_state19;
wire   [31:0] tmp_12_fu_616_p2;
reg   [31:0] tmp_12_reg_1090;
wire  signed [31:0] tmp_14_fu_630_p2;
reg  signed [31:0] tmp_14_reg_1095;
wire    ap_CS_fsm_state20;
reg   [63:0] length_a_addr_3_reg_1101;
wire    ap_CS_fsm_state21;
reg   [31:0] length_a_addr_3_read_reg_1113;
wire    ap_CS_fsm_state23;
reg    ap_block_state23;
reg   [31:0] b_c_addr_6_read_reg_1118;
wire   [31:0] tmp_16_fu_666_p2;
reg   [31:0] tmp_16_reg_1123;
wire    ap_CS_fsm_state24;
wire   [31:0] tmp_17_fu_670_p2;
reg   [31:0] tmp_17_reg_1128;
wire  signed [31:0] tmp_19_fu_684_p2;
reg  signed [31:0] tmp_19_reg_1133;
wire    ap_CS_fsm_state26;
reg   [31:0] length_a_addr_4_read_reg_1150;
wire    ap_CS_fsm_state28;
reg    ap_block_state28;
reg   [31:0] b_c_addr_8_read_reg_1155;
wire   [31:0] tmp_21_fu_714_p2;
reg   [31:0] tmp_21_reg_1160;
wire    ap_CS_fsm_state29;
wire   [31:0] tmp_22_fu_718_p2;
reg   [31:0] tmp_22_reg_1165;
wire  signed [31:0] tmp_24_fu_732_p2;
reg  signed [31:0] tmp_24_reg_1170;
wire    ap_CS_fsm_state30;
reg   [63:0] length_a_addr_5_reg_1176;
wire    ap_CS_fsm_state31;
reg   [31:0] length_a_addr_5_read_reg_1188;
wire    ap_CS_fsm_state33;
reg    ap_block_state33;
reg   [31:0] b_c_addr_10_read_reg_1193;
wire   [31:0] tmp_26_fu_768_p2;
reg   [31:0] tmp_26_reg_1198;
wire    ap_CS_fsm_state34;
wire   [31:0] tmp_27_fu_772_p2;
reg   [31:0] tmp_27_reg_1203;
wire  signed [31:0] tmp_29_fu_786_p2;
reg  signed [31:0] tmp_29_reg_1208;
wire    ap_CS_fsm_state36;
reg   [31:0] length_a_addr_6_read_reg_1225;
wire    ap_CS_fsm_state38;
reg    ap_block_state38;
reg   [31:0] b_c_addr_12_read_reg_1230;
wire   [31:0] tmp_31_fu_816_p2;
reg   [31:0] tmp_31_reg_1235;
wire    ap_CS_fsm_state39;
wire   [31:0] tmp_32_fu_820_p2;
reg   [31:0] tmp_32_reg_1240;
wire  signed [31:0] tmp_34_fu_834_p2;
reg  signed [31:0] tmp_34_reg_1245;
wire    ap_CS_fsm_state40;
reg   [63:0] length_a_addr_7_reg_1251;
wire   [31:0] i_2_fu_860_p2;
reg   [31:0] i_2_reg_1257;
wire    ap_CS_fsm_state41;
wire   [31:0] tmp_37_fu_876_p2;
reg   [31:0] tmp_37_reg_1268;
reg   [31:0] length_a_addr_7_read_reg_1273;
wire    ap_CS_fsm_state43;
reg    ap_block_state43;
reg   [31:0] b_c_addr_14_read_reg_1278;
wire   [31:0] tmp_36_fu_880_p2;
reg   [31:0] tmp_36_reg_1283;
wire    ap_CS_fsm_state44;
reg   [63:0] length_a_addr_8_reg_1291;
wire    ap_CS_fsm_state46;
wire   [0:0] tmp_39_fu_894_p2;
wire    ap_CS_fsm_state47;
reg   [31:0] length_a_addr_8_read_reg_1303;
wire    ap_CS_fsm_state49;
reg    ap_block_state49;
reg   [31:0] b_c_addr_16_read_reg_1308;
wire   [31:0] tmp_41_fu_930_p2;
reg   [31:0] tmp_41_reg_1313;
wire    ap_CS_fsm_state50;
wire   [31:0] tmp_42_fu_934_p2;
reg   [31:0] tmp_42_reg_1318;
wire   [31:0] i_3_fu_939_p2;
reg   [31:0] i_3_reg_1323;
reg  signed [31:0] i_reg_364;
wire    ap_CS_fsm_state45;
reg  signed [31:0] i_1_reg_376;
wire    ap_CS_fsm_state51;
wire  signed [63:0] a_0_sum1_cast_fu_501_p1;
wire  signed [63:0] tmp_2_fu_511_p1;
wire  signed [63:0] tmp_6_fu_529_p1;
wire    ap_CS_fsm_state10;
wire   [63:0] a_0_sum2_fu_543_p2;
wire  signed [63:0] tmp_7_fu_539_p1;
wire  signed [63:0] tmp_s_fu_572_p1;
wire    ap_CS_fsm_state15;
wire   [63:0] a_0_sum3_fu_592_p2;
wire  signed [63:0] tmp_10_fu_588_p1;
wire  signed [63:0] tmp_13_fu_620_p1;
wire  signed [63:0] a_0_sum6_cast_fu_646_p1;
wire  signed [63:0] tmp_15_fu_656_p1;
wire  signed [63:0] tmp_18_fu_674_p1;
wire    ap_CS_fsm_state25;
wire   [63:0] a_0_sum4_fu_694_p2;
wire  signed [63:0] tmp_20_fu_690_p1;
wire  signed [63:0] tmp_23_fu_722_p1;
wire  signed [63:0] a_0_sum9_cast_fu_748_p1;
wire  signed [63:0] tmp_25_fu_758_p1;
wire  signed [63:0] tmp_28_fu_776_p1;
wire    ap_CS_fsm_state35;
wire   [63:0] a_0_sum5_fu_796_p2;
wire  signed [63:0] tmp_30_fu_792_p1;
wire  signed [63:0] tmp_33_fu_824_p1;
wire  signed [63:0] a_0_sum7_cast_fu_850_p1;
wire  signed [63:0] tmp_35_fu_866_p1;
wire  signed [63:0] tmp_38_fu_884_p1;
wire  signed [63:0] a_0_sum_cast_fu_909_p1;
wire  signed [63:0] tmp_40_fu_919_p1;
wire  signed [63:0] tmp_43_fu_945_p1;
wire   [31:0] i_5_op_op_fu_410_p2;
wire   [31:0] p_neg_fu_424_p2;
wire   [28:0] p_lshr_fu_430_p4;
wire   [0:0] tmp_45_fu_416_p3;
wire   [28:0] p_neg_t_fu_440_p2;
wire   [28:0] tmp_46_fu_446_p4;
wire   [0:0] tmp_fu_403_p3;
wire   [28:0] tmp_47_fu_456_p3;
wire   [28:0] tmp_48_fu_464_p3;
wire  signed [32:0] tmp_2_cast_fu_491_p1;
wire   [32:0] a_0_sum1_fu_495_p2;
wire  signed [32:0] tmp_17_cast_fu_636_p1;
wire   [32:0] a_0_sum6_fu_640_p2;
wire  signed [32:0] tmp_29_cast_fu_738_p1;
wire   [32:0] a_0_sum9_fu_742_p2;
wire  signed [32:0] tmp_41_cast_fu_840_p1;
wire   [32:0] a_0_sum7_fu_844_p2;
wire  signed [32:0] tmp_47_cast_fu_899_p1;
wire   [32:0] a_0_sum_fu_903_p2;
reg   [50:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 51'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_50_fu_480_p2 == 1'd1))) begin
        i_1_reg_376 <= i_5_reg_975;
    end else if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
        i_1_reg_376 <= i_3_reg_1323;
    end
end

always @ (posedge ap_clk) begin
    if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
        i_reg_364 <= i_2_reg_1257;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        i_reg_364 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state33))) begin
        b_c_addr_10_read_reg_1193 <= b_c_datain;
        length_a_addr_5_read_reg_1188 <= length_a_datain;
    end
end

always @ (posedge ap_clk) begin
    if ((~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state38))) begin
        b_c_addr_12_read_reg_1230 <= b_c_datain;
        length_a_addr_6_read_reg_1225 <= length_a_datain;
    end
end

always @ (posedge ap_clk) begin
    if ((~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state43))) begin
        b_c_addr_14_read_reg_1278 <= b_c_datain;
        length_a_addr_7_read_reg_1273 <= length_a_datain;
    end
end

always @ (posedge ap_clk) begin
    if ((~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state49))) begin
        b_c_addr_16_read_reg_1308 <= b_c_datain;
        length_a_addr_8_read_reg_1303 <= length_a_datain;
    end
end

always @ (posedge ap_clk) begin
    if ((~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13))) begin
        b_c_addr_2_read_reg_1043 <= b_c_datain;
        length_a_addr_1_read_reg_1038 <= length_a_datain;
    end
end

always @ (posedge ap_clk) begin
    if ((~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state18))) begin
        b_c_addr_4_read_reg_1080 <= b_c_datain;
        length_a_addr_2_read_reg_1075 <= length_a_datain;
    end
end

always @ (posedge ap_clk) begin
    if ((~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state23))) begin
        b_c_addr_6_read_reg_1118 <= b_c_datain;
        length_a_addr_3_read_reg_1113 <= length_a_datain;
    end
end

always @ (posedge ap_clk) begin
    if ((~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state28))) begin
        b_c_addr_8_read_reg_1155 <= b_c_datain;
        length_a_addr_4_read_reg_1150 <= length_a_datain;
    end
end

always @ (posedge ap_clk) begin
    if ((~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
        b_c_addr_read_reg_1011 <= b_c_datain;
        length_a_addr_read_reg_1006 <= length_a_datain;
    end
end

always @ (posedge ap_clk) begin
    if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        i_2_reg_1257 <= i_2_fu_860_p2;
        length_a_addr_7_reg_1251[63 : 3] <= a_0_sum7_cast_fu_850_p1[63 : 3];
        tmp_34_reg_1245[31 : 3] <= tmp_34_fu_834_p2[31 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state50)) begin
        i_3_reg_1323 <= i_3_fu_939_p2;
        tmp_41_reg_1313 <= tmp_41_fu_930_p2;
        tmp_42_reg_1318 <= tmp_42_fu_934_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_5_reg_975[31 : 3] <= i_5_fu_396_p3[31 : 3];
        tmp_49_reg_980[31 : 3] <= tmp_49_fu_472_p3[31 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        length_a_addr_3_reg_1101[63 : 2] <= a_0_sum6_cast_fu_646_p1[63 : 2];
        tmp_14_reg_1095[31 : 2] <= tmp_14_fu_630_p2[31 : 2];
    end
end

always @ (posedge ap_clk) begin
    if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
        length_a_addr_5_reg_1176[63 : 1] <= a_0_sum9_cast_fu_748_p1[63 : 1];
        tmp_24_reg_1170[1] <= tmp_24_fu_732_p2[1];
tmp_24_reg_1170[31 : 3] <= tmp_24_fu_732_p2[31 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_39_fu_894_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state46))) begin
        length_a_addr_8_reg_1291 <= a_0_sum_cast_fu_909_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (tmp_50_fu_480_p2 == 1'd0))) begin
        length_a_addr_reg_994[63 : 1] <= a_0_sum1_cast_fu_501_p1[63 : 1];
        tmp_1_reg_988[31 : 1] <= tmp_1_fu_485_p2[31 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((length_a_rsp_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
        length_reg_955 <= length_a_datain;
        tmp_44_reg_970 <= {{length_a_datain[31:3]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        tmp_11_reg_1085 <= tmp_11_fu_612_p2;
        tmp_12_reg_1090 <= tmp_12_fu_616_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state24)) begin
        tmp_16_reg_1123 <= tmp_16_fu_666_p2;
        tmp_17_reg_1128 <= tmp_17_fu_670_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state26)) begin
        tmp_19_reg_1133[1 : 0] <= tmp_19_fu_684_p2[1 : 0];
tmp_19_reg_1133[31 : 3] <= tmp_19_fu_684_p2[31 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state29)) begin
        tmp_21_reg_1160 <= tmp_21_fu_714_p2;
        tmp_22_reg_1165 <= tmp_22_fu_718_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state34)) begin
        tmp_26_reg_1198 <= tmp_26_fu_768_p2;
        tmp_27_reg_1203 <= tmp_27_fu_772_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state36)) begin
        tmp_29_reg_1208[0] <= tmp_29_fu_786_p2[0];
tmp_29_reg_1208[31 : 3] <= tmp_29_fu_786_p2[31 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        tmp_31_reg_1235 <= tmp_31_fu_816_p2;
        tmp_32_reg_1240 <= tmp_32_fu_820_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state44)) begin
        tmp_36_reg_1283 <= tmp_36_fu_880_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state41)) begin
        tmp_37_reg_1268 <= tmp_37_fu_876_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        tmp_3_reg_1016 <= tmp_3_fu_521_p2;
        tmp_5_reg_1021 <= tmp_5_fu_525_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        tmp_4_reg_1058[0] <= tmp_4_fu_582_p2[0];
tmp_4_reg_1058[31 : 2] <= tmp_4_fu_582_p2[31 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_8_reg_1048 <= tmp_8_fu_563_p2;
        tmp_9_reg_1053 <= tmp_9_fu_567_p2;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) & (tmp_39_fu_894_p2 == 1'd0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state46) & (tmp_39_fu_894_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
        b_c_address = tmp_43_fu_945_p1;
    end else if ((1'b1 == ap_CS_fsm_state47)) begin
        b_c_address = tmp_40_fu_919_p1;
    end else if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
        b_c_address = tmp_38_fu_884_p1;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        b_c_address = tmp_35_fu_866_p1;
    end else if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
        b_c_address = tmp_33_fu_824_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        b_c_address = tmp_30_fu_792_p1;
    end else if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
        b_c_address = tmp_28_fu_776_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        b_c_address = tmp_25_fu_758_p1;
    end else if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
        b_c_address = tmp_23_fu_722_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        b_c_address = tmp_20_fu_690_p1;
    end else if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
        b_c_address = tmp_18_fu_674_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        b_c_address = tmp_15_fu_656_p1;
    end else if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
        b_c_address = tmp_13_fu_620_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        b_c_address = tmp_10_fu_588_p1;
    end else if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
        b_c_address = tmp_s_fu_572_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        b_c_address = tmp_7_fu_539_p1;
    end else if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        b_c_address = tmp_6_fu_529_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        b_c_address = tmp_2_fu_511_p1;
    end else begin
        b_c_address = 'bx;
    end
end

always @ (*) begin
    if ((b_c_req_full_n == 1'b1)) begin
        if ((1'b1 == ap_CS_fsm_state51)) begin
            b_c_dataout = tmp_41_reg_1313;
        end else if ((1'b1 == ap_CS_fsm_state45)) begin
            b_c_dataout = tmp_36_reg_1283;
        end else if ((1'b1 == ap_CS_fsm_state40)) begin
            b_c_dataout = tmp_31_reg_1235;
        end else if ((1'b1 == ap_CS_fsm_state35)) begin
            b_c_dataout = tmp_26_reg_1198;
        end else if ((1'b1 == ap_CS_fsm_state30)) begin
            b_c_dataout = tmp_21_reg_1160;
        end else if ((1'b1 == ap_CS_fsm_state25)) begin
            b_c_dataout = tmp_16_reg_1123;
        end else if ((1'b1 == ap_CS_fsm_state20)) begin
            b_c_dataout = tmp_11_reg_1085;
        end else if ((1'b1 == ap_CS_fsm_state15)) begin
            b_c_dataout = tmp_8_reg_1048;
        end else if ((1'b1 == ap_CS_fsm_state10)) begin
            b_c_dataout = tmp_3_reg_1016;
        end else begin
            b_c_dataout = 'bx;
        end
    end else begin
        b_c_dataout = 'bx;
    end
end

always @ (*) begin
    if ((((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state35)) | ((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state25)) | ((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state51)) | ((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state45)) | ((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state40)) | ((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state30)) | ((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20)))) begin
        b_c_req_din = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6))) begin
        b_c_req_din = 1'b0;
    end else begin
        b_c_req_din = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6) | ((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state35)) | ((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state25)) | ((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15)) | ((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state51)) | ((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state45)) | ((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state40)) | ((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state30)) | ((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20)))) begin
        b_c_req_write = 1'b1;
    end else begin
        b_c_req_write = 1'b0;
    end
end

always @ (*) begin
    if (((~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state49)) | (~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state43)) | (~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state38)) | (~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state33)) | (~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state28)) | (~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state23)) | (~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state18)) | (~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)))) begin
        b_c_rsp_read = 1'b1;
    end else begin
        b_c_rsp_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state47)) begin
        length_a_address = length_a_addr_8_reg_1291;
    end else if ((1'b1 == ap_CS_fsm_state41)) begin
        length_a_address = length_a_addr_7_reg_1251;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        length_a_address = a_0_sum5_fu_796_p2;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        length_a_address = length_a_addr_5_reg_1176;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        length_a_address = a_0_sum4_fu_694_p2;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        length_a_address = length_a_addr_3_reg_1101;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        length_a_address = a_0_sum3_fu_592_p2;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        length_a_address = a_0_sum2_fu_543_p2;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        length_a_address = length_a_addr_reg_994;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        length_a_address = 32'd0;
    end else begin
        length_a_address = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state47) | (1'b1 == ap_CS_fsm_state41) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state6) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        length_a_req_write = 1'b1;
    end else begin
        length_a_req_write = 1'b0;
    end
end

always @ (*) begin
    if (((~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state49)) | (~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state43)) | (~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state38)) | (~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state33)) | (~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state28)) | (~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state23)) | (~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state18)) | (~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13)) | (~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8)) | ((length_a_rsp_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3)))) begin
        length_a_rsp_read = 1'b1;
    end else begin
        length_a_rsp_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((length_a_rsp_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (tmp_50_fu_480_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if ((~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if ((~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state15))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if ((~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            if ((~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state23))) begin
                ap_NS_fsm = ap_ST_fsm_state24;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state25))) begin
                ap_NS_fsm = ap_ST_fsm_state26;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state25;
            end
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            if ((~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state28))) begin
                ap_NS_fsm = ap_ST_fsm_state29;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state28;
            end
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state30))) begin
                ap_NS_fsm = ap_ST_fsm_state31;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state30;
            end
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            if ((~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state33))) begin
                ap_NS_fsm = ap_ST_fsm_state34;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state33;
            end
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state35))) begin
                ap_NS_fsm = ap_ST_fsm_state36;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state35;
            end
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            if ((~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state38))) begin
                ap_NS_fsm = ap_ST_fsm_state39;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state38;
            end
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            if ((~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state43))) begin
                ap_NS_fsm = ap_ST_fsm_state44;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state43;
            end
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state45))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state45;
            end
        end
        ap_ST_fsm_state46 : begin
            if (((1'b1 == ap_CS_fsm_state46) & (tmp_39_fu_894_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state47;
            end
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            if ((~((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0)) & (1'b1 == ap_CS_fsm_state49))) begin
                ap_NS_fsm = ap_ST_fsm_state50;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state49;
            end
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            if (((b_c_req_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state51))) begin
                ap_NS_fsm = ap_ST_fsm_state46;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state51;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_0_sum1_cast_fu_501_p1 = $signed(a_0_sum1_fu_495_p2);

assign a_0_sum1_fu_495_p2 = ($signed(tmp_2_cast_fu_491_p1) + $signed(33'd1));

assign a_0_sum2_fu_543_p2 = (tmp_7_fu_539_p1 | 64'd1);

assign a_0_sum3_fu_592_p2 = (tmp_10_fu_588_p1 | 64'd1);

assign a_0_sum4_fu_694_p2 = (tmp_20_fu_690_p1 | 64'd1);

assign a_0_sum5_fu_796_p2 = (tmp_30_fu_792_p1 | 64'd1);

assign a_0_sum6_cast_fu_646_p1 = $signed(a_0_sum6_fu_640_p2);

assign a_0_sum6_fu_640_p2 = ($signed(tmp_17_cast_fu_636_p1) + $signed(33'd1));

assign a_0_sum7_cast_fu_850_p1 = $signed(a_0_sum7_fu_844_p2);

assign a_0_sum7_fu_844_p2 = ($signed(tmp_41_cast_fu_840_p1) + $signed(33'd1));

assign a_0_sum9_cast_fu_748_p1 = $signed(a_0_sum9_fu_742_p2);

assign a_0_sum9_fu_742_p2 = ($signed(tmp_29_cast_fu_738_p1) + $signed(33'd1));

assign a_0_sum_cast_fu_909_p1 = $signed(a_0_sum_fu_903_p2);

assign a_0_sum_fu_903_p2 = ($signed(tmp_47_cast_fu_899_p1) + $signed(33'd1));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state43 = ap_CS_fsm[32'd42];

assign ap_CS_fsm_state44 = ap_CS_fsm[32'd43];

assign ap_CS_fsm_state45 = ap_CS_fsm[32'd44];

assign ap_CS_fsm_state46 = ap_CS_fsm[32'd45];

assign ap_CS_fsm_state47 = ap_CS_fsm[32'd46];

assign ap_CS_fsm_state49 = ap_CS_fsm[32'd48];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state50 = ap_CS_fsm[32'd49];

assign ap_CS_fsm_state51 = ap_CS_fsm[32'd50];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state13 = ((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state18 = ((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state23 = ((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state28 = ((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state33 = ((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state38 = ((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state43 = ((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state49 = ((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state8 = ((b_c_rsp_empty_n == 1'b0) | (length_a_rsp_empty_n == 1'b0));
end

assign ap_return = 32'd0;

assign b_c_size = 32'd1;

assign i_2_fu_860_p2 = ($signed(i_reg_364) + $signed(32'd8));

assign i_3_fu_939_p2 = ($signed(i_1_reg_376) + $signed(32'd1));

assign i_5_fu_396_p3 = {{tmp_44_reg_970}, {3'd0}};

assign i_5_op_op_fu_410_p2 = (i_5_fu_396_p3 + 32'd7);

assign length_a_dataout = 32'd0;

assign length_a_req_din = 1'b0;

assign length_a_size = 32'd1;

assign p_lshr_fu_430_p4 = {{p_neg_fu_424_p2[31:3]}};

assign p_neg_fu_424_p2 = ($signed(32'd4294967289) - $signed(i_5_fu_396_p3));

assign p_neg_t_fu_440_p2 = (29'd0 - p_lshr_fu_430_p4);

assign tmp_10_fu_588_p1 = tmp_4_fu_582_p2;

assign tmp_11_fu_612_p2 = (b_c_addr_4_read_reg_1080 + length_a_addr_2_read_reg_1075);

assign tmp_12_fu_616_p2 = ($signed(tmp_4_reg_1058) + $signed(length_reg_955));

assign tmp_13_fu_620_p1 = $signed(tmp_12_reg_1090);

assign tmp_14_fu_630_p2 = (i_reg_364 | 32'd3);

assign tmp_15_fu_656_p1 = tmp_14_reg_1095;

assign tmp_16_fu_666_p2 = (b_c_addr_6_read_reg_1118 + length_a_addr_3_read_reg_1113);

assign tmp_17_cast_fu_636_p1 = tmp_14_fu_630_p2;

assign tmp_17_fu_670_p2 = ($signed(tmp_14_reg_1095) + $signed(length_reg_955));

assign tmp_18_fu_674_p1 = $signed(tmp_17_reg_1128);

assign tmp_19_fu_684_p2 = (i_reg_364 | 32'd4);

assign tmp_1_fu_485_p2 = (i_reg_364 | 32'd1);

assign tmp_20_fu_690_p1 = tmp_19_fu_684_p2;

assign tmp_21_fu_714_p2 = (b_c_addr_8_read_reg_1155 + length_a_addr_4_read_reg_1150);

assign tmp_22_fu_718_p2 = ($signed(tmp_19_reg_1133) + $signed(length_reg_955));

assign tmp_23_fu_722_p1 = $signed(tmp_22_reg_1165);

assign tmp_24_fu_732_p2 = (i_reg_364 | 32'd5);

assign tmp_25_fu_758_p1 = tmp_24_reg_1170;

assign tmp_26_fu_768_p2 = (b_c_addr_10_read_reg_1193 + length_a_addr_5_read_reg_1188);

assign tmp_27_fu_772_p2 = ($signed(tmp_24_reg_1170) + $signed(length_reg_955));

assign tmp_28_fu_776_p1 = $signed(tmp_27_reg_1203);

assign tmp_29_cast_fu_738_p1 = tmp_24_fu_732_p2;

assign tmp_29_fu_786_p2 = (i_reg_364 | 32'd6);

assign tmp_2_cast_fu_491_p1 = tmp_1_fu_485_p2;

assign tmp_2_fu_511_p1 = tmp_1_reg_988;

assign tmp_30_fu_792_p1 = tmp_29_fu_786_p2;

assign tmp_31_fu_816_p2 = (b_c_addr_12_read_reg_1230 + length_a_addr_6_read_reg_1225);

assign tmp_32_fu_820_p2 = ($signed(tmp_29_reg_1208) + $signed(length_reg_955));

assign tmp_33_fu_824_p1 = $signed(tmp_32_reg_1240);

assign tmp_34_fu_834_p2 = (i_reg_364 | 32'd7);

assign tmp_35_fu_866_p1 = tmp_34_reg_1245;

assign tmp_36_fu_880_p2 = (b_c_addr_14_read_reg_1278 + length_a_addr_7_read_reg_1273);

assign tmp_37_fu_876_p2 = ($signed(tmp_34_reg_1245) + $signed(length_reg_955));

assign tmp_38_fu_884_p1 = $signed(tmp_37_reg_1268);

assign tmp_39_fu_894_p2 = (($signed(i_1_reg_376) < $signed(length_reg_955)) ? 1'b1 : 1'b0);

assign tmp_3_fu_521_p2 = (b_c_addr_read_reg_1011 + length_a_addr_read_reg_1006);

assign tmp_40_fu_919_p1 = i_1_reg_376;

assign tmp_41_cast_fu_840_p1 = tmp_34_fu_834_p2;

assign tmp_41_fu_930_p2 = (b_c_addr_16_read_reg_1308 + length_a_addr_8_read_reg_1303);

assign tmp_42_fu_934_p2 = ($signed(length_reg_955) + $signed(i_1_reg_376));

assign tmp_43_fu_945_p1 = $signed(tmp_42_reg_1318);

assign tmp_45_fu_416_p3 = i_5_op_op_fu_410_p2[32'd31];

assign tmp_46_fu_446_p4 = {{i_5_op_op_fu_410_p2[31:3]}};

assign tmp_47_cast_fu_899_p1 = i_1_reg_376;

assign tmp_47_fu_456_p3 = ((tmp_45_fu_416_p3[0:0] === 1'b1) ? p_neg_t_fu_440_p2 : tmp_46_fu_446_p4);

assign tmp_48_fu_464_p3 = ((tmp_fu_403_p3[0:0] === 1'b1) ? 29'd0 : tmp_47_fu_456_p3);

assign tmp_49_fu_472_p3 = {{tmp_48_fu_464_p3}, {3'd0}};

assign tmp_4_fu_582_p2 = (i_reg_364 | 32'd2);

assign tmp_50_fu_480_p2 = ((i_reg_364 == tmp_49_reg_980) ? 1'b1 : 1'b0);

assign tmp_5_fu_525_p2 = ($signed(tmp_1_reg_988) + $signed(length_reg_955));

assign tmp_6_fu_529_p1 = $signed(tmp_5_reg_1021);

assign tmp_7_fu_539_p1 = i_reg_364;

assign tmp_8_fu_563_p2 = (b_c_addr_2_read_reg_1043 + length_a_addr_1_read_reg_1038);

assign tmp_9_fu_567_p2 = ($signed(length_reg_955) + $signed(i_reg_364));

assign tmp_fu_403_p3 = length_reg_955[32'd31];

assign tmp_s_fu_572_p1 = $signed(tmp_9_reg_1053);

always @ (posedge ap_clk) begin
    i_5_reg_975[2:0] <= 3'b000;
    tmp_49_reg_980[2:0] <= 3'b000;
    tmp_1_reg_988[0] <= 1'b1;
    length_a_addr_reg_994[0] <= 1'b0;
    tmp_4_reg_1058[1] <= 1'b1;
    tmp_14_reg_1095[1:0] <= 2'b11;
    length_a_addr_3_reg_1101[1:0] <= 2'b00;
    tmp_19_reg_1133[2] <= 1'b1;
    tmp_24_reg_1170[0] <= 1'b1;
    tmp_24_reg_1170[2] <= 1'b1;
    length_a_addr_5_reg_1176[0] <= 1'b0;
    tmp_29_reg_1208[2:1] <= 2'b11;
    tmp_34_reg_1245[2:0] <= 3'b111;
    length_a_addr_7_reg_1251[2:0] <= 3'b000;
end

endmodule //rocc0_vadd
